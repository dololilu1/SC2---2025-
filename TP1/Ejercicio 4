% TRABAJO PRÁCTICO N° 1 
% Profesor: Julian Pucheta 
% Alumno: Dolores Pilar Gomez
% Caso de estudio 2

% Sistema de 3 variables de estado 

clear all; clc; close all

% Dadas las ecuaciones del motor de corriente continua con un torque de
% carga TL no nulo, con los parámetros: 

Laa = 366e-6; % Inductancia
J = 5e-9; % Momento de inercia del rotor: Representa cuanta energía se necesita para 
% acelerar o desacelerar el eje. 
Ra = 55.6; % Resistencia 
Bm = 0; % Coeficiente de fricción 
Ki = 6.49e-3; % Constante de torque 
Km = 6.53e-3; % Constante de fuerza contra-electromotriz 
Va = 12; 

% Consigna: Implementar un algoritmo de simulación para inferir el
% comportamiento de las variables de interés mediante integración Euler con
% un tamañano de paso h = 10e-7 segundos para calcular su operación con un
% controlador. 

% MODELADO DEL MOTOR EN EL ESPACIO DE ESTADOS 

% Variables de estado 
% x1 = ia;  x2 = wr;  x3 = tita 

% Entradas 
% u1 = Va;  u2 = TL

% Salidas
% y1 = wr 

A = [-Ra/Laa -Km/Laa 0 ; Ki/J -Bm/J 0 ; 0 1 0]; % matriz de estados
B = [1/Laa 0 ; 0 -1/J ; 0 0]; % matriz de entrada 
C = [0 1 0]; % matriz de salida                                                       
D = [0 0]; % matriz de transmisión directa   

% Tiempo de simulación 
T = 5; 
tp = 10e-7; % Tamaño de paso 
np = round (T/tp); % Número de puntos 
t = linspace (0, T, np);

% Torque máximo 
Ia = Va/Ra; 
TL = Ia*Ki;

% Entradas: voltaje y torque 
va = 12 * ones(1, np);
Tl =  1.3e-3 * ones(1, np); 
u =  [va; Tl];

% Inicialización de estados
x = [0; 0; 0]; % [i_a; omega_r; theta]
ia = zeros(1, np);
w  = zeros(1, np);
theta = zeros(1, np);

% Simulación por Euler
for i = 1:np-1
   xp = A * x + B * u(:, i);  % dx/dt
   x = x + xp * tp;
   ia(i+1)    = x(1);
   w(i+1)     = x(2);
   theta(i+1) = x(3);
end

% Graficar resultados
figure;
subplot(3,1,1); plot(t, ia, 'r'); grid on;
title('Corriente en el motor'); ylabel('i_a (A)');
subplot(3,1,2); plot(t, w, 'b'); grid on;
title('Velocidad angular'); ylabel('\omega_r (rad/s)');
subplot(3,1,3); plot(t, theta, 'g'); grid on;
title('Posición angular'); xlabel('Tiempo (s)'); ylabel('\theta (rad)');

